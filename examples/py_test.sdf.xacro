<sdf xmlns:xacro="http://dd">
    <xacro:property name="base_mass" value="100" />
    <xacro:python>
    <![CDATA[
import numpy as np 
def foo(): 
    if 2 > 5: 
        return 5,4,3,2,1
    global np
    b = np.array([0,1])
    x = 3433
    y = 324
    z = 3
    m = 1
    return x,y,z,m,b
temp = foo()
return_values = {'x': temp[0], 'y': temp[1], 'z': temp[2], 'm': temp[3], 'b': temp[4]}
]]>
    </xacro:python> 

    <model name='heavy_base'>
        <pose>0 0 0 0 0 0</pose>
        <link name="heavy_base_link">
            <!-- position the base such that the bottom touches the floor -->
            <pose>0 0 0.05 0 0 0</pose>
            <inertial>
                <!-- use here of python x value -->
                <mass>${m}</mass>
                <inertia>
                    <ixx>${m*(y*y+z*z)/12}</ixx>
                    <ixy>0</ixy>
                    <ixz>0</ixz>
                    <iyy>${m*(x*x+z*z)/12}</iyy>
                    <iyz>0</iyz>
                    <izz>${m*(x*x+y*y)/12}</izz>
                </inertia>
            </inertial>
            <!-- Same geometry as visual -->
            <collision name="heavy_base_collision">
                <geometry>
                    <box>
                    <!-- use here of python x value -->
                        <size>${x} 1 0.1</size>
                    </box>
                </geometry>
            </collision>
            <!-- Same geometry as collision -->
            <visual name="heavy_base_visual">
                <geometry>
                    <box>
                        <size>2.2 1 0.1</size>
                    </box>
                </geometry>
                <material>
                    <ambient>0 0 1 1</ambient>
                    <diffuse>0 0 1 1</diffuse>
                    <specular>0 0 1 1</specular>
                </material>
            </visual>
        </link>
    </model>
</sdf>